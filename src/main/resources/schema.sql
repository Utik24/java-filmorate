-- Удаление таблиц
drop table IF EXISTS friend_requests CASCADE;
drop table IF EXISTS friendship CASCADE;
drop table IF EXISTS likes CASCADE;
drop table IF EXISTS film_genre CASCADE;
drop table IF EXISTS films CASCADE;
drop table IF EXISTS genres CASCADE;
drop table IF EXISTS ratings CASCADE;
drop table IF EXISTS users CASCADE;

-- Создание таблицы пользователей
create TABLE users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    login VARCHAR(50) NOT NULL UNIQUE CHECK (login <> ''),
    name VARCHAR(100),
    email VARCHAR(255) NOT NULL UNIQUE CHECK (email <> ''),
    birthday DATE NOT NULL CHECK (birthday <= CURRENT_DATE),
    CONSTRAINT login_no_spaces CHECK (login NOT LIKE '% %')
);

-- Создание таблицы рейтингов MPA
create TABLE ratings (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(10) UNIQUE NOT NULL
);

-- Создание таблицы фильмов
create TABLE films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL CHECK (name <> ''),
    description VARCHAR(200),
    release_date DATE NOT NULL CHECK (release_date >= '1895-12-28'),
    duration BIGINT NOT NULL CHECK (duration > 0),
    rating_id INT NOT NULL REFERENCES ratings(id) ON delete RESTRICT
);

-- Создание таблицы жанров
create TABLE genres (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(50) UNIQUE NOT NULL
);

-- Связь фильмов и жанров
create TABLE film_genre (
    film_id BIGINT REFERENCES films(id) ON delete CASCADE,
    genre_id INT REFERENCES genres(id) ON delete CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

-- Таблица лайков
create TABLE likes (
    film_id BIGINT REFERENCES films(id) ON delete CASCADE,
    user_id BIGINT REFERENCES users(id) ON delete CASCADE,
    PRIMARY KEY (film_id, user_id)
);

-- Таблица дружбы
create TABLE friendship (
    user_id BIGINT REFERENCES users(id) ON delete CASCADE,
    friend_id BIGINT REFERENCES users(id) ON delete CASCADE,
    PRIMARY KEY (user_id, friend_id),
    CONSTRAINT no_self_friend CHECK (user_id <> friend_id)
);

-- Таблица запросов в друзья
create TABLE friend_requests (
    requester_id BIGINT REFERENCES users(id) ON delete CASCADE,
    target_id BIGINT REFERENCES users(id) ON delete CASCADE,
    PRIMARY KEY (requester_id, target_id),
    CONSTRAINT no_self_request CHECK (requester_id <> target_id)
);

-- Вставка жанров
merge into genres KEY(id) VALUES
(1, 'Комедия'),
(2, 'Драма'),
(3, 'Мультфильм'),
(4, 'Триллер'),
(5, 'Документальный'),
(6, 'Боевик');

-- Вставка рейтингов MPA
merge into ratings KEY(id) VALUES
(1, 'G'),
(2, 'PG'),
(3, 'PG-13'),
(4, 'R'),
(5, 'NC-17');